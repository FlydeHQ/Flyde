imports: {}
exports:
  - Equals
parts:
  Equals:
    id: Equals
    inputs:
      val:
        mode: required
        type: any
      compare:
        mode: required
        type: any
      transform:
        mode: required-if-connected
        type: any
    outputs:
      r:
        type: any
      else:
        type: any
    customViewCode: <% if (isDefined(inputs.compare)) { %>Equals <%- inputs.compare %> <% }
      else { %> Equals <% } %>
    completionOutputs:
      - r
      - else
    fnCode: |-
      const { val, compare, transform } = inputs;
      const { r } = outputs;

      const valueToPush = isDefined(transform) ? transform : val;
              
      // magic here
      if (val === compare) {
          r.next(valueToPush);
      }  else {
          outputs['else'].next(valueToPush);
      }
exposedFunctionality: []
