name: Build, Test and Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn run build
      - name: Test
        run: yarn run test
      - name: Lint
        run: yarn run lint
      - name: Bump patch version, Publish to NPM (excluding private packages), and Commit changes
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

          root=$(pwd)

          for package in $(yarn workspaces list --json | jq -r '.location'); do
            cd $package
            is_private=$(jq '.private' package.json)
            if [[ "$is_private" == "true" ]]; then
              echo "Skipping private package in: $package"
              cd $root
              continue
            fi  
            echo "Bumping version of $package"
            yarn version patch
            echo "Publishing $package"
            npm publish --access public --tolerate-republish
            echo "Published $package\n\n"
            cd $root
          done

          git add -A
          git commit -m "chore(release): bump package versions"
          git push origin main
      - name: Deploy Website to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Build output to publish to the `gh-pages` branch:
          publish_dir: ./website/build
          # The following lines assign commit authorship to the official
          # GH-Actions bot for deploys to `gh-pages` branch:
          # https://github.com/actions/checkout/issues/13#issuecomment-724415212
          # The GH actions bot is used by default if you didn't specify the two fields.
          # You can swap them out with your own user credentials.
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
