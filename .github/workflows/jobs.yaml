name: Build, Test and Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn run build
      - name: Test
        run: yarn run test
      - name: Lint
        run: yarn run lint

  publish:
    needs: build-test-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ env.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn run build
      - name: Bump patch version, Publish to NPM (excluding private packages), and Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"

          for package in $(yarn workspaces list --json | jq -r '.name'); do
            cd packages/$package

            is_private=$(jq '.private' package.json)
            if [[ "$is_private" == "true" ]]; then
              echo "Skipping private package: $package"
              cd ../..
              continue
            fi

            echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

            npm version patch -m "chore(release): bump version to %s"
            npm publish

            cd ../..
          done

          git add -A
          git commit -m "chore(release): bump package versions"
          git push origin main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
