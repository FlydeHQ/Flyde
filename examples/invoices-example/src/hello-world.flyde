imports:
  "@flyde/stdlib":
    - name: Add
      alias: Add
    - name: Subtract
      alias: Subtract
    - name: AccumulateSome
      alias: AccumulateSome
    - name: Accumulate
      alias: Accumulate
    - name: Cuid
      alias: Cuid
    - name: AccumulateUntil
      alias: AccumulateUntil
    - name: Multiply
      alias: Multiply
  ./loan-app.flyde:
    - name: Bob2
      alias: Bob2
exports: []
mainId: Main
parts:
  Main:
    id: Main
    inputs: {}
    outputs:
      result:
        type: any
    inputsPosition: {}
    outputsPosition:
      result:
        x: -312.8969505148232
        y: 474.9747063414614
    completionOutputs:
      - result
    instances:
      - partId: TestCode
        pos:
          x: -348.36812255859377
          y: 208.48209381103516
        id: TestCode-201
        inputConfig: {}
      - partId: Inline Code 67624
        pos:
          x: -513.7404296875
          y: 11.306140441894513
        id: Inline Code 67624-618
        inputConfig: {}
      - partId: Inline Code 18564
        pos:
          x: -213.7680541992188
          y: -26.241798400878906
        id: Inline Code 18564-770
        inputConfig: {}
    connections:
      - from:
          insId: Inline Code 67624-618
          pinId: r
        to:
          insId: TestCode-201
          pinId: a
      - from:
          insId: Inline Code 18564-770
          pinId: r
        to:
          insId: TestCode-201
          pinId: b
      - from:
          insId: TestCode-201
          pinId: r
        to:
          insId: __this
          pinId: result
  Inline Code 19610:
    id: Inline Code 19610
    inputs: {}
    outputs:
      r:
        type: any
    customViewCode: "`Hello World!`"
    templateType: value
    completionOutputs:
      - r
    fnCode: outputs.r.next((`Hello World!`))
  Inline Code 67624:
    id: Inline Code 67624
    inputs: {}
    outputs:
      r:
        type: any
    customViewCode: '"Dave"'
    dataBuilderSource: IkRhdmUi
    templateType: value
    completionOutputs:
      - r
    fnCode: outputs.r.next(("Dave"))
  Inline Code 18564:
    id: Inline Code 18564
    inputs: {}
    outputs:
      r:
        type: any
    customViewCode: '"Bob"'
    dataBuilderSource: IkJvYiI=
    templateType: value
    completionOutputs:
      - r
    fnCode: outputs.r.next(("Bob"))
exposedFunctionality: []
