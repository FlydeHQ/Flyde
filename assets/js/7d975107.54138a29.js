"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4496],{38570:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var r=n(70079);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,b=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(b,a(a({ref:t},u),{},{components:n})):r.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},64297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(10328),o=(n(70079),n(38570));const i={sidebar_position:3},a="Built-in Nodes Overview",l={unversionedId:"Reference/built-in-nodes",id:"Reference/built-in-nodes",title:"Built-in Nodes Overview",description:"This article is a work in progress. It will be updated with more information soon.",source:"@site/docs/Reference/3-built-in-nodes.md",sourceDirName:"Reference",slug:"/Reference/built-in-nodes",permalink:"/docs/Reference/built-in-nodes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Reference/3-built-in-nodes.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Frequently Asked Questions",permalink:"/docs/faq"},next:{title:"Flyde Nodes Library",permalink:"/docs/Reference/StdLib/"}},s={},c=[{value:"Control Flow",id:"control-flow",level:2},{value:"Conditional",id:"conditional",level:3},{value:"Switch",id:"switch",level:3},{value:"Loop List",id:"loop-list",level:3},{value:"Value",id:"value",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"built-in-nodes-overview"},"Built-in Nodes Overview"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This article is a work in progress. It will be updated with more information soon.")),(0,o.kt)("p",null,"Flyde comes with a set of built-in nodes that can be used to build flows. All of these nodes can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/tree/main/stdlib"},"standard library")," and are available as an npm package ",(0,o.kt)("inlineCode",{parentName:"p"},"@flyde/stdlib"),"."),(0,o.kt)("h2",{id:"control-flow"},"Control Flow"),(0,o.kt)("h3",{id:"conditional"},"Conditional"),(0,o.kt)("h3",{id:"switch"},"Switch"),(0,o.kt)("h3",{id:"loop-list"},"Loop List"),(0,o.kt)("h2",{id:"value"},"Value"),(0,o.kt)("p",null,"This is Flyde's version of a constant. It emits a single value to its output."),(0,o.kt)("h2",{id:""}))}p.isMDXComponent=!0}}]);