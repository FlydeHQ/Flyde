"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9949],{38570:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(70079);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,m=c["".concat(l,".").concat(u)]||c[u]||f[u]||i;return n?a.createElement(m,o(o({ref:t},s),{},{components:n})):a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[c]="string"==typeof e?e:r,o[1]=d;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},26605:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var a=n(10328),r=(n(70079),n(38570));const i={id:"BaseNode",title:"Interface: BaseNode",sidebar_label:"BaseNode",sidebar_position:0,custom_edit_url:null},o=void 0,d={unversionedId:"api-reference/interfaces/BaseNode",id:"api-reference/interfaces/BaseNode",title:"Interface: BaseNode",description:"Extended by VisualNode, CodeNode and InlineValueNode",source:"@site/docs/api-reference/interfaces/BaseNode.md",sourceDirName:"api-reference/interfaces",slug:"/api-reference/interfaces/BaseNode",permalink:"/docs/api-reference/interfaces/BaseNode",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BaseNode",title:"Interface: BaseNode",sidebar_label:"BaseNode",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"BaseDebuggerData",permalink:"/docs/api-reference/interfaces/BaseDebuggerData"},next:{title:"BasePart",permalink:"/docs/api-reference/interfaces/BasePart"}},l={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"completionOutputs",id:"completionoutputs",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"defaultStyle",id:"defaultstyle",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"description",id:"description",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"displayName",id:"displayname",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"id",id:"id",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"inputs",id:"inputs",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"namespace",id:"namespace",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"outputs",id:"outputs",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"reactiveInputs",id:"reactiveinputs",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"searchKeywords",id:"searchkeywords",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-9",level:4}],s={toc:p},c="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Extended by ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode"},"VisualNode"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/CodeNode"},"CodeNode")," and InlineValueNode"),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},(0,r.kt)("inlineCode",{parentName:"a"},"NodeMetadata"))),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"BaseNode"))),(0,r.kt)("p",{parentName:"li"},"\u21b3\u21b3 ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/CodeNode"},(0,r.kt)("inlineCode",{parentName:"a"},"CodeNode"))),(0,r.kt)("p",{parentName:"li"},"\u21b3\u21b3 ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode"},(0,r.kt)("inlineCode",{parentName:"a"},"VisualNode"))))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"completionoutputs"},"completionOutputs"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"completionOutputs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,'Instructs Flyde that the node is in "explicit completion" mode and describes which outputs trigger the node\'s completion. Receives a list of outputs that should trigger an explicit completion of the node when they emit a value. Any of the listed outputs will trigger a completion (i.e. completionOutput',"[0]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"OR")," completionOutput","[1]",")\nLeave empty for implicit completion. This should work best for 99% of the case."),(0,r.kt)("p",null,"To declare that 2 different outputs must emit a value in order to trigger a completion, different outputs can be joined together with a ",(0,r.kt)("inlineCode",{parentName:"p"},"+")," sign as following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'{\n...\n completionOutputs: ["data+headers", "error"] // this means either data AND headers, OR "error" will trigger an explicit completion.\n')),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/lifecycle"},"Nodes lifecycle")," for more info"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L144"},"core/src/node/node.ts:144")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"defaultstyle"},"defaultStyle"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"defaultStyle"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeStyle"},(0,r.kt)("inlineCode",{parentName:"a"},"NodeStyle"))),(0,r.kt)("p",null,"All instances of this node will inherit the default style if it is supplied.\nSee ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeStyle"},"NodeStyle")," for the full options supported"),(0,r.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},"NodeMetadata"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata#defaultstyle"},"defaultStyle")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L98"},"core/src/node/node.ts:98")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"description"},"description"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"description"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Is displayed in the visual editor and used to search for nodes."),(0,r.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},"NodeMetadata"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata#description"},"description")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L84"},"core/src/node/node.ts:84")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"displayname"},"displayName"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"displayName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"A human readable name for the node. Used in the visual editor."),(0,r.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},"NodeMetadata"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata#displayname"},"displayName")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L80"},"core/src/node/node.ts:80")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"id"},"id"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"id"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Node's unique id. ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode#instances"},"instances"),"  refer use this to refer to the correct node"),(0,r.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},"NodeMetadata"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata#id"},"id")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L75"},"core/src/node/node.ts:75")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"inputs"},"inputs"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"inputs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/InputPin"},(0,r.kt)("inlineCode",{parentName:"a"},"InputPin")),">"),(0,r.kt)("p",null,"A pin on a node that receives data. Each node can have zero or more input pins."),(0,r.kt)("p",null,"Example for the inputs of a mathematical multiplier node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'{\n multiplicand: { description: "The number to be multiplied" },\n multiplier: { description: "The number with which we multiply" },\n}\n')),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L116"},"core/src/node/node.ts:116")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"namespace"},"namespace"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"namespace"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"TBD"),(0,r.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},"NodeMetadata"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata#namespace"},"namespace")),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L92"},"core/src/node/node.ts:92")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"outputs"},"outputs"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"outputs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/OutputPin"},(0,r.kt)("inlineCode",{parentName:"a"},"OutputPin")),">"),(0,r.kt)("p",null,'A pin on a node that sends data. Each node can have zero or more output pins.\nFor example, a "Split array" node might have one input pin for an array and two output pins for the first and second halves of the array:'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n 'first half': { description: \"The first half of the array\" },\n 'second half': { description: \"The second half of the array\" },\n}\n")),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L129"},"core/src/node/node.ts:129")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"reactiveinputs"},"reactiveInputs"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"reactiveInputs"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Deprecated"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"TBD")),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L148"},"core/src/node/node.ts:148")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"searchkeywords"},"searchKeywords"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"searchKeywords"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,"A list of keywords that can be used to search for the node. Useful for node that users might search using different words."),(0,r.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata"},"NodeMetadata"),".",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeMetadata#searchkeywords"},"searchKeywords")),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/2b711e4a/core/src/node/node.ts#L88"},"core/src/node/node.ts:88")))}f.isMDXComponent=!0}}]);