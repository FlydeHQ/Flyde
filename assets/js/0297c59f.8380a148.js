"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2567],{38570:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(70079);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},36217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(24330),r=(n(70079),n(38570));const a={sidebar_position:6},i="Creating New Code Nodes",s={unversionedId:"code-nodes",id:"code-nodes",title:"Creating New Code Nodes",description:"While Flyde is a great tool for creating flows, sometimes you need to do something that is not possible with the built-in components.",source:"@site/docs/code-nodes.md",sourceDirName:".",slug:"/code-nodes",permalink:"/docs/code-nodes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/code-nodes.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Lifecycle of a Node",permalink:"/docs/lifecycle"},next:{title:"Installing/Publishing Packages",permalink:"/docs/packages"}},c={},l=[{value:"Example",id:"example",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-new-code-nodes"},"Creating New Code Nodes"),(0,r.kt)("p",null,"While Flyde is a great tool for creating flows, sometimes you need to do something that is not possible with the built-in components.\nCode nodes allow you to create custom components using TypeScript or JavaScript. Inside Code nodes you can use any library you want."),(0,r.kt)("p",null,"To create a new code node, you need to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a new file ending with ",(0,r.kt)("inlineCode",{parentName:"li"},".flyde.ts")," (or ",(0,r.kt)("inlineCode",{parentName:"li"},".flyde.js")," if you prefer JavaScript)"),(0,r.kt)("li",{parentName:"ol"},"Export an object that adheres to the ",(0,r.kt)("a",{parentName:"li",href:"/docs/api-reference/interfaces/CodeNode"},"CodeNode")," interface. Actually, you can return as many code nodes as you want from a single file")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".flyde.[j|t]s"),' ending hints the Flyde editor to look for code nodes in this file, and suggest them inside the "add node" menu.'),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Let's say we want create a scraping node that uses ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/scrape-it"},"Scrape-it"),". We can create a new file called ",(0,r.kt)("inlineCode",{parentName:"p"},"scrape-it.flyde.ts")," and add the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { CodeNode } from "@flyde/core";\nimport scrapeIt from "scrape-it";\n\nexport const scrapeItNode: CodeNode = {\n  name: "Scrape It",\n  description: "Scrapes a website",\n  inputs: {\n    url: {\n      type: "string",\n      description: "The URL to scrape",\n    },\n    options: {\n      type: "object",\n      description: "The options to pass to scrape-it",\n    },\n  },\n  outputs: {\n    data: {\n      type: "object",\n      description: "The scraped data",\n    },\n  },\n  async fn(inputs) {\n    const data = await scrapeIt(inputs.url, inputs.options);\n\n    return {\n      data,\n    };\n  },\n};\n')),(0,r.kt)("p",null,"Then, you should be able to use it in your flows!"))}u.isMDXComponent=!0}}]);