"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1381],{20740:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Log=void 0;t.Log={id:"Log",defaultStyle:{icon:"fa-terminal"},namespace:"Console",description:"Logs a value to the console",inputs:{value:{description:"Value to log"}},outputs:{},run:e=>{let{value:t}=e;return console.log(t)}}},35948:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DateToTimezoneOffset=t.DateToDayOfWeek=t.DateToMilliseconds=t.DateToSeconds=t.DateToMinutes=t.DateToHours=t.DateToDay=t.MonthToDate=t.DateToYear=t.DateToUnixTime=t.DateToISOString=t.DateToString=t.DateFromISOString=t.DateFromString=t.DateFromUnixTime=t.NowUnixTime=t.NowISOString=t.NowString=t.Now=void 0;const n="Dates";t.Now={id:"Now",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Returns the current date and time",inputs:{},outputs:{now:{description:"Current date and time"}},run:(e,t)=>{let{now:n}=t;return n.next(new Date)}},t.NowString={id:"Now String",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Returns the current date and time as a string",inputs:{},outputs:{now:{description:"Current date and time"}},run:(e,t)=>{let{now:n}=t;return n.next((new Date).toString())}},t.NowISOString={id:"Now ISO String",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Returns the current date and time as a string in ISO format",inputs:{},outputs:{now:{description:"Current date and time"}},run:(e,t)=>{let{now:n}=t;return n.next((new Date).toISOString())}},t.NowUnixTime={id:"Now Unix Time",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Returns the current date and time as a Unix time",inputs:{},outputs:{now:{description:"Current date and time"}},run:(e,t)=>{let{now:n}=t;return n.next((new Date).getTime())}},t.DateFromUnixTime={id:"Date From Unix Time",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Creates a date from a Unix time",inputs:{time:{description:"Unix time"}},outputs:{date:{description:"Date"}},run:(e,t)=>{let{time:n}=e,{date:i}=t;return i.next(new Date(n))}},t.DateFromString={id:"Date From String",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Creates a date from a string",inputs:{string:{description:"String"}},outputs:{date:{description:"Date"}},run:(e,t)=>{let{string:n}=e,{date:i}=t;return i.next(new Date(n))}},t.DateFromISOString={id:"Date From ISO String",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Creates a date from an ISO string",inputs:{string:{description:"String"}},outputs:{date:{description:"Date"}},run:async(e,t,n)=>{let{string:i}=e,{date:r}=t,{onError:o}=n;try{r.next(new Date(i))}catch(a){console.error("Error in node",a),o(a)}}},t.DateToString={id:"Date To String",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a string",inputs:{date:{description:"Date"}},outputs:{string:{description:"String"}},run:(e,t)=>{let{date:n}=e,{string:i}=t;return i.next(n.toString())}},t.DateToISOString={id:"Date To ISO String",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to an ISO string",inputs:{date:{description:"Date"}},outputs:{string:{description:"String"}},run:(e,t)=>{let{date:n}=e,{string:i}=t;return i.next(n.toISOString())}},t.DateToUnixTime={id:"Date To Unix Time",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a Unix time",inputs:{date:{description:"Date"}},outputs:{time:{description:"Unix time"}},run:(e,t)=>{let{date:n}=e,{time:i}=t;return i.next(n.getTime())}},t.DateToYear={id:"Date To Year",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a year",inputs:{date:{description:"Date"}},outputs:{year:{description:"Year"}},run:(e,t)=>{let{date:n}=e,{year:i}=t;return i.next(n.getFullYear())}},t.MonthToDate={id:"Month To Date",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a month",inputs:{date:{description:"Date"}},outputs:{month:{description:"Month"}},run:(e,t)=>{let{date:n}=e,{month:i}=t;return i.next(n.getMonth())}},t.DateToDay={id:"Date To Day",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a day",inputs:{date:{description:"Date"}},outputs:{day:{description:"Day"}},run:(e,t)=>{let{date:n}=e,{day:i}=t;return i.next(n.getDate())}},t.DateToHours={id:"Date To Hours",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to hours",inputs:{date:{description:"Date"}},outputs:{hours:{description:"Hours"}},run:(e,t)=>{let{date:n}=e,{hours:i}=t;return i.next(n.getHours())}},t.DateToMinutes={id:"Date To Minutes",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to minutes",inputs:{date:{description:"Date"}},outputs:{minutes:{description:"Minutes"}},run:(e,t)=>{let{date:n}=e,{minutes:i}=t;return i.next(n.getMinutes())}},t.DateToSeconds={id:"Date To Seconds",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to seconds",inputs:{date:{description:"Date"}},outputs:{seconds:{description:"Seconds"}},run:(e,t)=>{let{date:n}=e,{seconds:i}=t;return i.next(n.getSeconds())}},t.DateToMilliseconds={id:"Date To Milliseconds",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to milliseconds",inputs:{date:{description:"Date"}},outputs:{milliseconds:{description:"Milliseconds"}},run:(e,t)=>{let{date:n}=e,{milliseconds:i}=t;return i.next(n.getMilliseconds())}},t.DateToDayOfWeek={id:"Date To Day Of Week",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a day of the week",inputs:{date:{description:"Date"}},outputs:{day:{description:"Day"}},run:(e,t)=>{let{date:n}=e,{day:i}=t;return i.next(n.getDay())}},t.DateToTimezoneOffset={id:"Date To Timezone Offset",defaultStyle:{icon:"fa-calendar"},namespace:n,description:"Converts a date to a timezone offset",inputs:{date:{description:"Date"}},outputs:{offset:{description:"Offset"}},run:(e,t)=>{let{date:n}=e,{offset:i}=t;return i.next(n.getTimezoneOffset())}}},45888:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SumList=t.LessThanOrEqual=t.LessThan=t.GreaterThanOrEqual=t.GreaterThan=t.ToFixed=t.ParseFloat=t.ParseInt=t.Max=t.Min=t.Cos=t.Sin=t.Truncate=t.Round=t.Ceiling=t.Floor=t.AbsoluteValue=t.SquareRoot=t.Power=t.Modulo=t.Divide=t.Multiply=t.Subtract=t.Add=void 0;const n="Numbers";t.Add={id:"Add",defaultStyle:{icon:"fa-plus"},namespace:n,description:"Emits the sum of two numbers",inputs:{n1:{description:"First number to add"},n2:{description:"Second number to add"}},outputs:{sum:{description:"The sum of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{sum:r}=t;return r.next(n+i)}},t.Subtract={id:"Subtract",defaultStyle:{icon:"fa-minus"},namespace:n,description:"Emits the difference of two numbers",inputs:{n1:{description:"First number to subtract"},n2:{description:"Second number to subtract"}},outputs:{difference:{description:"The difference of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{difference:r}=t;return r.next(n-i)}},t.Multiply={id:"Multiply",defaultStyle:{icon:"fa-times"},namespace:n,description:"Emits the product of two numbers",inputs:{n1:{description:"First number to multiply"},n2:{description:"Second number to multiply"}},outputs:{product:{description:"The product of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{product:r}=t;return r.next(n*i)}},t.Divide={id:"Divide",defaultStyle:{icon:"fa-divide"},namespace:n,description:"Emits the quotient of two numbers",inputs:{n1:{description:"First number to divide"},n2:{description:"Second number to divide"}},outputs:{quotient:{description:"The quotient of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{quotient:r}=t;return r.next(n/i)}},t.Modulo={id:"Modulo",defaultStyle:{icon:"fa-percentage"},namespace:n,description:"Emits the remainder of two numbers",inputs:{n1:{description:"First number to divide"},n2:{description:"Second number to divide"}},outputs:{remainder:{description:"The remainder of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{remainder:r}=t;return r.next(n%i)}},t.Power={id:"Power",defaultStyle:{icon:"fa-superscript"},namespace:n,description:"Emits the power of two numbers",inputs:{n1:{description:"Base number"},n2:{description:"Exponent"}},outputs:{power:{description:"The power of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{power:r}=t;return r.next(Math.pow(n,i))}},t.SquareRoot={id:"Square Root",defaultStyle:{icon:"fa-square-root-alt"},namespace:n,description:"Emits the square root of a number",inputs:{n:{description:"Number to take the square root of"}},outputs:{root:{description:"The square root of n"}},run:(e,t)=>{let{n:n}=e,{root:i}=t;return i.next(Math.sqrt(n))}},t.AbsoluteValue={id:"Absolute Value",defaultStyle:{icon:"fa-abs"},namespace:n,description:"Emits the absolute value of a number",inputs:{n:{description:"Number to take the absolute value of"}},outputs:{absolute:{description:"The absolute value of n"}},run:(e,t)=>{let{n:n}=e,{absolute:i}=t;return i.next(Math.abs(n))}},t.Floor={id:"Floor",defaultStyle:{icon:"fa-floor"},namespace:n,description:"Emits the floor of a number",inputs:{n:{description:"Number to take the floor of"}},outputs:{floor:{description:"The floor of n"}},run:(e,t)=>{let{n:n}=e,{floor:i}=t;return i.next(Math.floor(n))}},t.Ceiling={id:"Ceiling",defaultStyle:{icon:"fa-ceiling"},namespace:n,description:"Emits the ceiling of a number",inputs:{n:{description:"Number to take the ceiling of"}},outputs:{ceiling:{description:"The ceiling of n"}},run:(e,t)=>{let{n:n}=e,{ceiling:i}=t;return i.next(Math.ceil(n))}},t.Round={id:"Round",defaultStyle:{icon:"fa-round"},namespace:n,description:"Emits the rounded value of a number",inputs:{n:{description:"Number to round"}},outputs:{rounded:{description:"The rounded value of n"}},run:(e,t)=>{let{n:n}=e,{rounded:i}=t;return i.next(Math.round(n))}},t.Truncate={id:"Truncate",defaultStyle:{icon:"fa-truncate"},namespace:n,description:"Emits the truncated value of a number",inputs:{n:{description:"Number to truncate"}},outputs:{truncated:{description:"The truncated value of n"}},run:(e,t)=>{let{n:n}=e,{truncated:i}=t;return i.next(Math.trunc(n))}},t.Sin={id:"Sin",defaultStyle:{icon:"fa-sin"},namespace:n,description:"Emits the sine of an angle",inputs:{angle:{description:"Angle in radians"}},outputs:{sine:{description:"The sine of angle"}},run:(e,t)=>{let{angle:n}=e,{sine:i}=t;return i.next(Math.sin(n))}},t.Cos={id:"Cos",defaultStyle:{icon:"fa-cos"},namespace:n,description:"Emits the cosine of an angle",inputs:{angle:{description:"Angle in radians"}},outputs:{cosine:{description:"The cosine of angle"}},run:(e,t)=>{let{angle:n}=e,{cosine:i}=t;return i.next(Math.cos(n))}},t.Min={id:"Min",namespace:n,description:"Emits the minimum of two numbers",inputs:{n1:{description:"First number"},n2:{description:"Second number"}},outputs:{min:{description:"The minimum of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{min:r}=t;return r.next(Math.min(n,i))}},t.Max={id:"Max",namespace:n,description:"Emits the maximum of two numbers",inputs:{n1:{description:"First number"},n2:{description:"Second number"}},outputs:{max:{description:"The maximum of n1 and n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{max:r}=t;return r.next(Math.max(n,i))}},t.ParseInt={id:"Parse Int",namespace:n,description:"Emits the integer value of a string",inputs:{str:{description:"String to parse"}},outputs:{int:{description:"The integer value of str"}},run:(e,t)=>{let{str:n}=e,{int:i}=t;return i.next(parseInt(n))}},t.ParseFloat={id:"Parse Float",namespace:n,description:"Emits the float value of a string",inputs:{str:{description:"String to parse"}},outputs:{float:{description:"The float value of str"}},run:(e,t)=>{let{str:n}=e,{float:i}=t;return i.next(parseFloat(n))}},t.ToFixed={id:"To Fixed",namespace:n,description:"Emits the specified number of decimal places of a number",inputs:{number:{description:"Number to format"},places:{description:"Number of decimal places to format to"}},outputs:{fixed:{description:"The number with the specified number of decimal places"}},run:(e,t)=>{let{number:n,places:i}=e,{fixed:r}=t;return r.next(n.toFixed(i))}},t.GreaterThan={id:"Greater Than",namespace:n,description:"Emits true if the first number is greater than the second",inputs:{n1:{description:"First number"},n2:{description:"Second number"}},outputs:{result:{description:"true if n1 is greater than n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{result:r}=t;return r.next(n>i)}},t.GreaterThanOrEqual={id:"Greater Than Or Equal",namespace:n,description:"Emits true if the first number is greater than or equal to the second",inputs:{n1:{description:"First number"},n2:{description:"Second number"}},outputs:{result:{description:"true if n1 is greater than or equal to n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{result:r}=t;return r.next(n>=i)}},t.LessThan={id:"Less Than",namespace:n,description:"Emits true if the first number is less than the second",inputs:{n1:{description:"First number"},n2:{description:"Second number"}},outputs:{result:{description:"true if n1 is less than n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{result:r}=t;return r.next(n<i)}},t.LessThanOrEqual={id:"Less Than Or Equal",namespace:n,description:"Emits true if the first number is less than or equal to the second",inputs:{n1:{description:"First number"},n2:{description:"Second number"}},outputs:{result:{description:"true if n1 is less than or equal to n2"}},run:(e,t)=>{let{n1:n,n2:i}=e,{result:r}=t;return r.next(n<=i)}},t.SumList={id:"Sum List",defaultStyle:{icon:"fa-plus"},namespace:n,description:"Emits the sum of a list of numbers",inputs:{list:{description:"List of numbers"}},outputs:{sum:{description:"The sum of the numbers in list"}},run:(e,t)=>{let{list:n}=e,{sum:i}=t;return i.next(n.reduce(((e,t)=>e+t),0))}}},90717:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GetGlobalState=t.SetGlobalState=void 0;const n="State";t.SetGlobalState={id:"Set Global State",namespace:n,description:"Sets a value in the global state",inputs:{key:{description:"Key to set"},value:{description:"Value to set"}},outputs:{setValue:{description:"Value that was set"}},run:(e,t,n)=>{let{key:i,value:r}=e,{setValue:o}=t,{globalState:a}=n;a.set(i,r),o.next(r)}},t.GetGlobalState={id:"Get Global State",namespace:n,description:"Gets a value from the global state",inputs:{key:{description:"Key to get"},defaultValue:{description:"Default value if key is not set",mode:"required-if-connected"}},outputs:{value:{description:"Value of the key"}},run:(e,t,n)=>{let{key:i,defaultValue:r}=e,{value:o}=t,{globalState:a,onError:s}=n;var u;void 0===a.get(i)&&void 0===r?s(new Error(`Key ${i} is not set`)):o.next(null!==(u=a.get(i))&&void 0!==u?u:r)}}},29755:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CodeExpression=void 0;const getInlineVariables_1=__webpack_require__(20528);exports.CodeExpression={id:"CodeExpression",displayName:"Code Expression",description:"A static value or JS expression",runFnBuilder:config=>(inputs,outputs,adv)=>{try{const resFn=eval(`(inputs) => ${config.value}`);outputs.value.next(resFn(inputs))}catch(e){adv.onError(e)}},definitionBuilder:e=>{var t;const n=(0,getInlineVariables_1.getVariables)(e.value);return{defaultStyle:{size:"small",icon:"code"},displayName:e.label||void 0,description:`Evaluates the expression \`${e.value}\``,inputs:Object.fromEntries(null!==(t=n.map((e=>[e,{}])))&&void 0!==t?t:[]),outputs:{value:{displayName:"Value",description:"The result of the expression evaluation"}}}},defaultData:{value:"inputs.a + inputs.b",label:'"inputs.a + inputs.b"'},editorComponentBundlePath:"../../../dist/ui/CodeExpression.js"}},17737:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InlineValue=void 0,t.InlineValue={id:"InlineValue",displayName:"Inline Value",description:"A static value or JS expression",runFnBuilder:e=>(t,n)=>{n.value.next(e.value)},definitionBuilder:e=>({defaultStyle:{size:"small",icon:"pen"},displayName:e.label||void 0,description:`Emits the value \`${JSON.stringify(e.value)}\``,inputs:{},outputs:{value:{displayName:"Value",description:"Emits the value configured"}}}),defaultData:{type:"string",value:"Hello",label:'"Hello"'},editorComponentBundlePath:"../../../dist/ui/InlineValue.js"}},20528:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getVariables=void 0;t.getVariables=e=>(e.match(/inputs\.([a-zA-Z]\w*)/g)||[]).map((e=>e.replace(/inputs\./,"")))},86619:function(e,t,n){var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||i(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),r(n(17737),t),r(n(29755),t)},81381:function(e,t,n){var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||i(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),r(n(50544),t),r(n(21518),t),r(n(45888),t),r(n(40863),t),r(n(66257),t),r(n(91294),t),r(n(20740),t),r(n(35948),t),r(n(90717),t),r(n(40232),t),r(n(86619),t)}}]);