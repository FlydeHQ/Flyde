"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9949],{38570:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(70079);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.createContext({}),p=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(n),f=a,m=c["".concat(d,".").concat(f)]||c[f]||u[f]||r;return n?i.createElement(m,l(l({ref:t},s),{},{components:n})):i.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=f;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},26605:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=n(10328),a=(n(70079),n(38570));const r={id:"BaseNode",title:"Interface: BaseNode",sidebar_label:"BaseNode",sidebar_position:0,custom_edit_url:null},l=void 0,o={unversionedId:"api-reference/interfaces/BaseNode",id:"api-reference/interfaces/BaseNode",title:"Interface: BaseNode",description:"Extended by VisualNode, CodeNode and InlineValueNode",source:"@site/docs/api-reference/interfaces/BaseNode.md",sourceDirName:"api-reference/interfaces",slug:"/api-reference/interfaces/BaseNode",permalink:"/docs/api-reference/interfaces/BaseNode",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BaseNode",title:"Interface: BaseNode",sidebar_label:"BaseNode",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"NodeInstanceError",permalink:"/docs/api-reference/classes/NodeInstanceError"},next:{title:"BasePinData",permalink:"/docs/api-reference/interfaces/BasePinData"}},d={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"completionOutputs",id:"completionoutputs",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"customViewCode",id:"customviewcode",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"defaultStyle",id:"defaultstyle",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"description",id:"description",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"displayName",id:"displayname",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"id",id:"id",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"inputs",id:"inputs",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"namespace",id:"namespace",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"outputs",id:"outputs",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"reactiveInputs",id:"reactiveinputs",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"searchKeywords",id:"searchkeywords",level:3},{value:"Defined in",id:"defined-in-10",level:4}],s={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Extended by ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode"},"VisualNode"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/CodeNode"},"CodeNode")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/InlineValueNode"},"InlineValueNode")),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"BaseNode"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/CodeNode"},(0,a.kt)("inlineCode",{parentName:"a"},"CodeNode"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/InlineValueNode"},(0,a.kt)("inlineCode",{parentName:"a"},"InlineValueNode"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode"},(0,a.kt)("inlineCode",{parentName:"a"},"VisualNode"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"completionoutputs"},"completionOutputs"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"completionOutputs"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,a.kt)("p",null,'Instructs Flyde that the node is in "explicit completion" mode and describes which outputs trigger the node\'s completion. Receives a list of outputs that should trigger an explicit completion of the node when they emit a value. Any of the listed outputs will trigger a completion (i.e. completionOutput',"[0]"," ",(0,a.kt)("inlineCode",{parentName:"p"},"OR")," completionOutput","[1]",")\nLeave empty for implicit completion. This should work best for 99% of the case."),(0,a.kt)("p",null,"To declare that 2 different outputs must emit a value in order to trigger a completion, different outputs can be joined together with a ",(0,a.kt)("inlineCode",{parentName:"p"},"+")," sign as following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'{\n...\n completionOutputs: ["data+headers", "error"] // this means either data AND headers, OR "error" will trigger an explicit completion.\n')),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"/docs/lifecycle"},"Nodes lifecycle")," for more info"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L142"},"core/src/node/node.ts:142")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"customviewcode"},"customViewCode"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"customViewCode"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Supply a custom string template (in ",(0,a.kt)("a",{parentName:"p",href:"https://https://handlebarsjs.com/"},"Handlebars")," format) to control how an instance of this node will be rendered in the visual editor.\nThe template has access to static values, making it possible to expose valuable information in the instance itself:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,a.kt)("p",null,'A "Delay" node has 2 inputs: value and a time. In many cases, the ',(0,a.kt)("inlineCode",{parentName:"p"},"time"),' input will be provided statically.\nIt can be convenient to show the time input in the instance itself so it shows "Delay 500ms" instead of "Delay" (in the case 500 is the static value of ',(0,a.kt)("inlineCode",{parentName:"p"},"time"),")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{\n  ...,\n  customViewCode: `{{#if inputs.time}}\nDelay {{inputs.time}} ms\n{{else}}\nDelay\n{{/if}}`\n}\n")),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L166"},"core/src/node/node.ts:166")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"defaultstyle"},"defaultStyle"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"defaultStyle"),": ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeStyle"},(0,a.kt)("inlineCode",{parentName:"a"},"NodeStyle"))),(0,a.kt)("p",null,"All instances of this node will inherit the default style if it is supplied.\nSee ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeStyle"},"NodeStyle")," for the full options supported"),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L171"},"core/src/node/node.ts:171")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"description"},"description"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"description"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Is displayed in the visual editor and used to search for nodes."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L95"},"core/src/node/node.ts:95")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"displayname"},"displayName"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"displayName"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A human readable name for the node. Used in the visual editor."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L91"},"core/src/node/node.ts:91")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"id"},"id"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"id"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Node's unique id. ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode#instances"},"instances"),"  refer use this to refer to the correct node"),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L86"},"core/src/node/node.ts:86")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"inputs"},"inputs"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"inputs"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/InputPin"},(0,a.kt)("inlineCode",{parentName:"a"},"InputPin")),">"),(0,a.kt)("p",null,"A pin on a node that receives data. Each node can have zero or more input pins."),(0,a.kt)("p",null,"Example for the inputs of a mathematical multiplier node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'{\n multiplicand: { description: "The number to be multiplied" },\n multiplier: { description: "The number with which we multiply" },\n}\n')),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L111"},"core/src/node/node.ts:111")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"namespace"},"namespace"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"namespace"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"TBD"),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L128"},"core/src/node/node.ts:128")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"outputs"},"outputs"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"outputs"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/OutputPin"},(0,a.kt)("inlineCode",{parentName:"a"},"OutputPin")),">"),(0,a.kt)("p",null,'A pin on a node that sends data. Each node can have zero or more output pins.\nFor example, a "Split array" node might have one input pin for an array and two output pins for the first and second halves of the array:'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n 'first half': { description: \"The first half of the array\" },\n 'second half': { description: \"The second half of the array\" },\n}\n")),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L124"},"core/src/node/node.ts:124")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"reactiveinputs"},"reactiveInputs"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"reactiveInputs"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Deprecated"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"TBD")),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L146"},"core/src/node/node.ts:146")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"searchkeywords"},"searchKeywords"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"searchKeywords"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,a.kt)("p",null,"A list of keywords that can be used to search for the node. Useful for node that users might search using different words."),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1c9fb0d/core/src/node/node.ts#L99"},"core/src/node/node.ts:99")))}u.isMDXComponent=!0}}]);