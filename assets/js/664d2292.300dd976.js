"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6195],{38570:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(70079);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,m=c["".concat(d,".").concat(u)]||c[u]||f[u]||i;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},51287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(10328),a=(n(70079),n(38570));const i={id:"NodeMetadata",title:"Interface: NodeMetadata",sidebar_label:"NodeMetadata",sidebar_position:0,custom_edit_url:null},o=void 0,l={unversionedId:"api-reference/interfaces/NodeMetadata",id:"api-reference/interfaces/NodeMetadata",title:"Interface: NodeMetadata",description:"Hierarchy",source:"@site/docs/api-reference/interfaces/NodeMetadata.md",sourceDirName:"api-reference/interfaces",slug:"/api-reference/interfaces/NodeMetadata",permalink:"/docs/api-reference/interfaces/NodeMetadata",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"NodeMetadata",title:"Interface: NodeMetadata",sidebar_label:"NodeMetadata",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"NodeLibraryGroup",permalink:"/docs/api-reference/interfaces/NodeLibraryGroup"},next:{title:"NodeStyle",permalink:"/docs/api-reference/interfaces/NodeStyle"}},d={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"defaultStyle",id:"defaultstyle",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"description",id:"description",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"displayName",id:"displayname",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"id",id:"id",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"namespace",id:"namespace",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"searchKeywords",id:"searchkeywords",level:3},{value:"Defined in",id:"defined-in-5",level:4}],s={toc:p},c="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"NodeMetadata"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/BaseNode"},(0,a.kt)("inlineCode",{parentName:"a"},"BaseNode"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/MacroNode"},(0,a.kt)("inlineCode",{parentName:"a"},"MacroNode"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"defaultstyle"},"defaultStyle"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"defaultStyle"),": ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeStyle"},(0,a.kt)("inlineCode",{parentName:"a"},"NodeStyle"))),(0,a.kt)("p",null,"All instances of this node will inherit the default style if it is supplied.\nSee ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/NodeStyle"},"NodeStyle")," for the full options supported"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1eb0a07/core/src/node/node.ts#L98"},"core/src/node/node.ts:98")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"description"},"description"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"description"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Is displayed in the visual editor and used to search for nodes."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1eb0a07/core/src/node/node.ts#L84"},"core/src/node/node.ts:84")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"displayname"},"displayName"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"displayName"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A human readable name for the node. Used in the visual editor."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1eb0a07/core/src/node/node.ts#L80"},"core/src/node/node.ts:80")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"id"},"id"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"id"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Node's unique id. ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/interfaces/VisualNode#instances"},"instances"),"  refer use this to refer to the correct node"),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1eb0a07/core/src/node/node.ts#L75"},"core/src/node/node.ts:75")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"namespace"},"namespace"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"namespace"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"TBD"),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1eb0a07/core/src/node/node.ts#L92"},"core/src/node/node.ts:92")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"searchkeywords"},"searchKeywords"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"searchKeywords"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,a.kt)("p",null,"A list of keywords that can be used to search for the node. Useful for node that users might search using different words."),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flydelabs/flyde/blob/1eb0a07/core/src/node/node.ts#L88"},"core/src/node/node.ts:88")))}f.isMDXComponent=!0}}]);