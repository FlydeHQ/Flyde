"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3070],{38570:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(70079);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},71349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(10328),o=(n(70079),n(38570));const a=n.p+"assets/images/cel-to-fah-6cc8457ee099aa10ab7cead82e9ea482.png",i={sidebar_position:4},s="Integrating with Existing Code",l={unversionedId:"integrate-flows",id:"integrate-flows",title:"Integrating with Existing Code",description:"A core tenet of Flyde is that it should integrate with existing code, and not replace it.",source:"@site/docs/4-integrate-flows.mdx",sourceDirName:".",slug:"/integrate-flows",permalink:"/docs/integrate-flows",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/4-integrate-flows.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Built-in Nodes Overview",permalink:"/docs/built-in-nodes"},next:{title:"Creating Custom Nodes",permalink:"/docs/custom-nodes"}},c={},u=[],p={toc:u},d="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"integrating-with-existing-code"},"Integrating with Existing Code"),(0,o.kt)("p",null,"A core tenet of Flyde is that it should ",(0,o.kt)("strong",{parentName:"p"},"integrate with existing code, and not replace it"),"."),(0,o.kt)("p",null,"To achieve this, Flyde provides a runtime library that allows you to load and run .flyde files, and a webpack loader that allows you to load .flyde files directly from your code. Also, custom nodes can be implemented using TypeScript or JavaScript (more on that in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/custom-nodes"},"custom nodes article"),")."),(0,o.kt)("p",null,"For example, given a .flyde flow that converts Celsius to Fahrenheit:"),(0,o.kt)("img",{src:a,width:"400"}),(0,o.kt)("p",null,"You can load and run it from your code as following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { loadFlow } from "@flyde/runtime";\n\nconst execute = await loadFlow("./celsius-to-fahrenheit.flyde");\n\nconst inputs = { celsius: 0 }; // "celcius" is a main input in the flow, therefore it must be provided when executing the flow\nconst { result } = execute(inputs); // execute returns a "result" promise, along with a cleanup function that can be used to cancel the execution.\n\nconst { fahrenheit } = await result; // each output in the flow is a property on the result object\n\nconsole.log(result.fahrenheit); // 32\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," function returns an object with a ",(0,o.kt)("inlineCode",{parentName:"p"},"result")," property - a promise that resolves to the result of the flow."),(0,o.kt)("p",null,'You may also listen to outputs before the flow completes by passing an "onOutputs" callback to the second argument of ',(0,o.kt)("inlineCode",{parentName:"p"},"execute"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const { result } = execute(inputs, {\n  onOutputs: (key, value) => {\n    console.log(`output with key ${key} emitted value ${value}`);\n  },\n});\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Learn more about the lifecycle of a flow in the ",(0,o.kt)("a",{parentName:"p",href:"./advanced-concepts"},"advanced concepts article"),".")),(0,o.kt)("p",null,"Another key method of intgrating with existing code is by creating your own custom nodes. Learn more about that in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/custom-nodes"},"custom nodes article"),"."))}f.isMDXComponent=!0}}]);